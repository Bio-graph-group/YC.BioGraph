<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>Octokit</id>
    <version>0.23.0</version>
    <authors>GitHub</authors>
    <owners>GitHub</owners>
    <licenseUrl>https://github.com/octokit/octokit.net/blob/master/LICENSE.txt</licenseUrl>
    <projectUrl>https://github.com/octokit/octokit.net</projectUrl>
    <iconUrl>https://f.cloud.github.com/assets/19977/1441274/160fba8c-41a9-11e3-831d-61d88fa886f4.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>An async-based GitHub API client library for .NET</description>
    <summary>An async-based GitHub API client library for .NET</summary>
    <releaseNotes>Features**
- Added support to test whether a URL points to a GitHub Enterprise instance - #1404 via @haacked
- Added granular methods for Protected Branches preview API - #1443 via @maddin2016
- Repository Traffic preview API support - #1457 via @maddin2016
- Preview API for merge/squash/rebase in repository settings - #1477 via @ryangribble
- Added support for performing a rebase and merge through the API- #1479 via @ryangribble
Fixes**
- Repository identifiers now use `long` instead of `int` - #1445 via @shana, #1485 via @ryangribble
- Searching for C# through the GitHub API now uses the correct alias - #1463 via @dampir
- Resolved deadlocking scenario in async/await usage - #1486 via @zzzprojects
Other**
- LINQPad samples are now verified at build time - #1456 via @mderriey
- More obsolete APIs removed - #1458 via @ryangribble
- .NET Core support has been started - #1462 via @mderriey
Breaking Changes**
Repository identifiers returned from the GitHub API will exceed `Int32.MaxValue` in
around 12 months, based on current growth. We've decided to update everywhere we
require (or return) a repository identifier from `int` to `long` so that these will
continue to work in the future, and the implicit conversion from `int` to `long`
means the impact should be manageable now.
`MergePullRequest.Squash` has been marked as obsolete in favour of the `MergeMethod`
property - use `PullRequestMergeMethod.Squash` or `PullRequestMergeMethod.Rebase` if
you want to change the merge behaviour when merging a pull request.</releaseNotes>
    <copyright>Copyright GitHub 2013</copyright>
    <tags>GitHub API Octokit linqpad-samples</tags>
    <dependencies>
      <group>
        <dependency id="Microsoft.Net.Http" />
      </group>
      <group targetFramework=".NETFramework4.5" />
      <group targetFramework=".NETCore4.5" />
      <group targetFramework=".NETPortable0.0-win81+wpa81" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System.Net.Http" targetFramework=".NETFramework4.5, .NETCore4.5" />
    </frameworkAssemblies>
  </metadata>
</package>